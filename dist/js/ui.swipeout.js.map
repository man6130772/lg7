{"version":3,"sources":["swipeout.js"],"names":[],"mappingsfile":"ui.swipeout.js","sourcesContent":["/*===============================================================================\n************   Swipeout Actions (Swipe to delete)   ************\n===============================================================================*/\n/* global $:true */\n/*jshint unused: false*/\n+function ($) {\n  \"use strict\";\n\n  var swipeoutOpenedEl;\n  var allowSwipeout = true;\n\n  var params = {\n    swipeout: true,\n    swipeoutNoFollow: false\n  };\n\n  $.initSwipeout = function (swipeoutEl) {\n    var isTouched, isMoved, isScrolling, touchesStart = {}, touchStartTime, touchesDiff, swipeOutEl, swipeOutContent, actionsRight, actionsLeft, actionsLeftWidth, actionsRightWidth, translate, opened, openedActions, buttonsLeft, buttonsRight, direction, overswipeLeftButton, overswipeRightButton, overswipeLeft, overswipeRight, noFoldLeft, noFoldRight;\n    $(document).on($.touchEvents.start, function (e) {\n        if (swipeoutOpenedEl) {\n            var target = $(e.target);\n            if (!(\n                swipeoutOpenedEl.is(target[0]) ||\n                target.parents('.swipeout').is(swipeoutOpenedEl) ||\n                target.hasClass('modal-in') ||\n                target.hasClass('modal-overlay') ||\n                target.hasClass('actions-modal') || \n                target.parents('.actions-modal.modal-in, .modal.modal-in').length > 0\n                )) {\n                $.swipeoutClose(swipeoutOpenedEl);\n            }\n        }\n    });\n\n    function handleTouchStart(e) {\n        if (!allowSwipeout) return;\n        isMoved = false;\n        isTouched = true;\n        isScrolling = undefined;\n        var position = $.getTouchPosition(e);\n        touchesStart.x = position.x;\n        touchesStart.y = position.y;\n        touchStartTime = (new Date()).getTime();\n    }\n    function handleTouchMove(e) {\n        if (!isTouched) return;\n        var position = $.getTouchPosition(e);\n        var pageX = position.x;\n        var pageY = position.y;\n        if (typeof isScrolling === 'undefined') {\n            isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n        }\n        if (isScrolling) {\n            isTouched = false;\n            return;\n        }\n\n        if (!isMoved) {\n            if ($('.list-block.sortable-opened').length > 0) return;\n            /*jshint validthis:true */\n            swipeOutEl = $(this);\n            swipeOutContent = swipeOutEl.find('.swipeout-content');\n            actionsRight = swipeOutEl.find('.swipeout-actions-right');\n            actionsLeft = swipeOutEl.find('.swipeout-actions-left');\n            actionsLeftWidth = actionsRightWidth = buttonsLeft = buttonsRight = overswipeRightButton = overswipeLeftButton = null;\n            noFoldLeft = actionsLeft.hasClass('swipeout-actions-no-fold') || params.swipeoutActionsNoFold;\n            noFoldRight = actionsRight.hasClass('swipeout-actions-no-fold') || params.swipeoutActionsNoFold;\n            if (actionsLeft.length > 0) {\n                actionsLeftWidth = actionsLeft.outerWidth();\n                buttonsLeft = actionsLeft.children('a');\n                overswipeLeftButton = actionsLeft.find('.swipeout-overswipe');\n            }\n            if (actionsRight.length > 0) {\n                actionsRightWidth = actionsRight.outerWidth();\n                buttonsRight = actionsRight.children('a');\n                overswipeRightButton = actionsRight.find('.swipeout-overswipe');\n            }\n            opened = swipeOutEl.hasClass('swipeout-opened');\n            if (opened) {\n                openedActions = swipeOutEl.find('.swipeout-actions-left.swipeout-actions-opened').length > 0 ? 'left' : 'right';\n            }\n            swipeOutEl.removeClass('transitioning');\n            if (!params.swipeoutNoFollow) {\n                swipeOutEl.find('.swipeout-actions-opened').removeClass('swipeout-actions-opened');\n                swipeOutEl.removeClass('swipeout-opened');\n            }\n        }\n        isMoved = true;\n        e.preventDefault();\n        \n        touchesDiff = pageX - touchesStart.x;\n        translate = touchesDiff;\n\n        if (opened) {\n            if (openedActions === 'right') translate = translate - actionsRightWidth;\n            else translate = translate + actionsLeftWidth;\n        }\n\n        if (translate > 0 && actionsLeft.length === 0 || translate < 0 && actionsRight.length === 0) {\n            if (!opened) {\n                isTouched = isMoved = false;\n                swipeOutContent.transform('');\n                if (buttonsRight && buttonsRight.length > 0) {\n                    buttonsRight.transform('');\n                }\n                if (buttonsLeft && buttonsLeft.length > 0) {\n                    buttonsLeft.transform('');\n                }\n                return;\n            }\n            translate = 0;\n        }\n\n        if (translate < 0) direction = 'to-left';\n        else if (translate > 0) direction = 'to-right';\n        else {\n            if (direction) direction = direction;\n            else direction = 'to-left';\n        }\n        \n        var i, buttonOffset, progress;\n        \n        e.f7PreventPanelSwipe = true;\n        if (params.swipeoutNoFollow) {\n            if (opened) {\n                if (openedActions === 'right' && touchesDiff > 0) {\n                    $.swipeoutClose(swipeOutEl);\n                }\n                if (openedActions === 'left' && touchesDiff < 0) {\n                    $.swipeoutClose(swipeOutEl);\n                }\n            }\n            else {\n                if (touchesDiff < 0 && actionsRight.length > 0) {\n                    $.swipeoutOpen(swipeOutEl, 'right');\n                }\n                if (touchesDiff > 0 && actionsLeft.length > 0) {\n                    $.swipeoutOpen(swipeOutEl, 'left');\n                }\n            }\n            isTouched = false;\n            isMoved = false;\n            return;\n        }\n        overswipeLeft = false;\n        overswipeRight = false;\n        var $button;\n        if (actionsRight.length > 0) {\n            // Show right actions\n            progress = translate / actionsRightWidth;\n            if (translate < -actionsRightWidth) {\n                translate = -actionsRightWidth - Math.pow(-translate - actionsRightWidth, 0.8);\n                if (overswipeRightButton.length > 0) {\n                    overswipeRight = true;\n                }\n            }\n            for (i = 0; i < buttonsRight.length; i++) {\n                if (typeof buttonsRight[i]._buttonOffset === 'undefined') {\n                    buttonsRight[i]._buttonOffset = buttonsRight[i].offsetLeft;\n                }\n                buttonOffset = buttonsRight[i]._buttonOffset;\n                $button = $(buttonsRight[i]);\n                if (overswipeRightButton.length > 0 && $button.hasClass('swipeout-overswipe')) {\n                    $button.css({left: (overswipeRight ? -buttonOffset : 0) + 'px'});\n                    if (overswipeRight) {\n                        $button.addClass('swipeout-overswipe-active');\n                    }\n                    else {\n                        $button.removeClass('swipeout-overswipe-active');   \n                    }\n                }\n                $button.transform('translate3d(' + (translate - buttonOffset * (1 + Math.max(progress, -1))) + 'px,0,0)');\n            }\n        }\n        if (actionsLeft.length > 0) {\n            // Show left actions\n            progress = translate / actionsLeftWidth;\n            if (translate > actionsLeftWidth) {\n                translate = actionsLeftWidth + Math.pow(translate - actionsLeftWidth, 0.8);\n                if (overswipeLeftButton.length > 0) {\n                    overswipeLeft = true;\n                }\n            }\n            for (i = 0; i < buttonsLeft.length; i++) {\n                if (typeof buttonsLeft[i]._buttonOffset === 'undefined') {\n                    buttonsLeft[i]._buttonOffset = actionsLeftWidth - buttonsLeft[i].offsetLeft - buttonsLeft[i].offsetWidth;\n                }\n                buttonOffset = buttonsLeft[i]._buttonOffset;\n                $button = $(buttonsLeft[i]);\n                if (overswipeLeftButton.length > 0 && $button.hasClass('swipeout-overswipe')) {\n                    $button.css({left: (overswipeLeft ? buttonOffset : 0) + 'px'});\n                    if (overswipeLeft) {\n                        $button.addClass('swipeout-overswipe-active');\n                    }\n                    else {\n                        $button.removeClass('swipeout-overswipe-active');   \n                    }\n                }\n                if (buttonsLeft.length > 1) {\n                    $button.css('z-index', buttonsLeft.length - i); \n                }\n                $button.transform('translate3d(' + (translate + buttonOffset * (1 - Math.min(progress, 1))) + 'px,0,0)');\n            }\n        }\n        swipeOutContent.transform('translate3d(' + translate + 'px,0,0)');\n    }\n    function handleTouchEnd(e) {\n        if (!isTouched || !isMoved) {\n            isTouched = false;\n            isMoved = false;\n            return;\n        }\n\n        isTouched = false;\n        isMoved = false;\n        var timeDiff = (new Date()).getTime() - touchStartTime;\n        var action, actionsWidth, actions, buttons, i, noFold;\n        \n        noFold = direction === 'to-left' ? noFoldRight : noFoldLeft;\n        actions = direction === 'to-left' ? actionsRight : actionsLeft;\n        actionsWidth = direction === 'to-left' ? actionsRightWidth : actionsLeftWidth;\n\n        if (\n            timeDiff < 300 && (touchesDiff < -10 && direction === 'to-left' || touchesDiff > 10 && direction === 'to-right') ||\n            timeDiff >= 300 && Math.abs(translate) > actionsWidth / 2\n        ) {\n            action = 'open';\n        }\n        else {\n            action = 'close';\n        }\n        if (timeDiff < 300) {\n            if (Math.abs(translate) === 0) action = 'close';\n            if (Math.abs(translate) === actionsWidth) action = 'open';\n        }\n        \n        if (action === 'open') {\n            swipeoutOpenedEl = swipeOutEl;\n            swipeOutEl.trigger('open');\n            swipeOutEl.addClass('swipeout-opened transitioning');\n            var newTranslate = direction === 'to-left' ? -actionsWidth : actionsWidth;\n            swipeOutContent.transform('translate3d(' + newTranslate + 'px,0,0)');\n            actions.addClass('swipeout-actions-opened');\n            buttons = direction === 'to-left' ? buttonsRight : buttonsLeft;\n            if (buttons) {\n                for (i = 0; i < buttons.length; i++) {\n                    $(buttons[i]).transform('translate3d(' + newTranslate + 'px,0,0)');\n                }\n            }\n            if (overswipeRight) {\n                actionsRight.find('.swipeout-overswipe')[0].click();\n            }\n            if (overswipeLeft) {\n                actionsLeft.find('.swipeout-overswipe')[0].click();\n            }\n        }\n        else {\n            swipeOutEl.trigger('close');\n            swipeoutOpenedEl = undefined;\n            swipeOutEl.addClass('transitioning').removeClass('swipeout-opened');\n            swipeOutContent.transform('');\n            actions.removeClass('swipeout-actions-opened');\n        }\n        \n        var buttonOffset;\n        if (buttonsLeft && buttonsLeft.length > 0 && buttonsLeft !== buttons) {\n            for (i = 0; i < buttonsLeft.length; i++) {\n                buttonOffset = buttonsLeft[i]._buttonOffset;\n                if (typeof buttonOffset === 'undefined') {\n                    buttonsLeft[i]._buttonOffset = actionsLeftWidth - buttonsLeft[i].offsetLeft - buttonsLeft[i].offsetWidth;\n                }\n                $(buttonsLeft[i]).transform('translate3d(' + (buttonOffset) + 'px,0,0)');\n            }\n        }\n        if (buttonsRight && buttonsRight.length > 0 && buttonsRight !== buttons) {\n            for (i = 0; i < buttonsRight.length; i++) {\n                buttonOffset = buttonsRight[i]._buttonOffset;\n                if (typeof buttonOffset === 'undefined') {\n                    buttonsRight[i]._buttonOffset = buttonsRight[i].offsetLeft;\n                }\n                $(buttonsRight[i]).transform('translate3d(' + (-buttonOffset) + 'px,0,0)');\n            }\n        }\n        swipeOutContent.transitionEnd(function (e) {\n            if (opened && action === 'open' || closed && action === 'close') return;\n            swipeOutEl.trigger(action === 'open' ? 'opened' : 'closed');\n            if (opened && action === 'close') {\n                if (actionsRight.length > 0) {\n                    buttonsRight.transform('');\n                }\n                if (actionsLeft.length > 0) {\n                    buttonsLeft.transform('');\n                }\n            }\n        });\n    }\n    if (swipeoutEl) {\n        $(swipeoutEl).on($.touchEvents.start, handleTouchStart);\n        $(swipeoutEl).on($.touchEvents.move, handleTouchMove);\n        $(swipeoutEl).on($.touchEvents.end, handleTouchEnd);\n    }\n    else {\n        $(document).on($.touchEvents.start, '.list-block li.swipeout', handleTouchStart);\n        $(document).on($.touchEvents.move, '.list-block li.swipeout', handleTouchMove);\n        $(document).on($.touchEvents.end, '.list-block li.swipeout', handleTouchEnd);\n    }\n        \n  };\n  $.swipeoutOpen = function (el, dir, callback) {\n    el = $(el);\n    if (arguments.length === 2) {\n        if (typeof arguments[1] === 'function') {\n            callback = dir;\n        }\n    }\n\n    if (el.length === 0) return;\n    if (el.length > 1) el = $(el[0]);\n    if (!el.hasClass('swipeout') || el.hasClass('swipeout-opened')) return;\n    if (!dir) {\n        if (el.find('.swipeout-actions-right').length > 0) dir = 'right';\n        else dir = 'left';\n    }\n    var swipeOutActions = el.find('.swipeout-actions-' + dir);\n    if (swipeOutActions.length === 0) return;\n    var noFold = swipeOutActions.hasClass('swipeout-actions-no-fold') || params.swipeoutActionsNoFold;\n    el.trigger('open').addClass('swipeout-opened').removeClass('transitioning');\n    swipeOutActions.addClass('swipeout-actions-opened');\n    var buttons = swipeOutActions.children('a');\n    var swipeOutActionsWidth = swipeOutActions.outerWidth();\n    var translate = dir === 'right' ? -swipeOutActionsWidth : swipeOutActionsWidth;\n    var i;\n    if (buttons.length > 1) {\n        for (i = 0; i < buttons.length; i++) {\n            if (dir === 'right') {\n                $(buttons[i]).transform('translate3d(' + (- buttons[i].offsetLeft) + 'px,0,0)');\n            }\n            else {\n                $(buttons[i]).css('z-index', buttons.length - i).transform('translate3d(' + (swipeOutActionsWidth - buttons[i].offsetWidth - buttons[i].offsetLeft) + 'px,0,0)');\n            }\n        }\n        var clientLeft = buttons[1].clientLeft;\n    }\n    el.addClass('transitioning');\n    for (i = 0; i < buttons.length; i++) {\n        $(buttons[i]).transform('translate3d(' + (translate) + 'px,0,0)');\n    }\n    el.find('.swipeout-content').transform('translate3d(' + translate + 'px,0,0)').transitionEnd(function () {\n        el.trigger('opened');\n        if (callback) callback.call(el[0]);\n    });\n    swipeoutOpenedEl = el;\n  };\n  $.swipeoutClose = function (el, callback) {\n    el = $(el);\n    if (el.length === 0) return;\n    if (!el.hasClass('swipeout-opened')) return;\n    var dir = el.find('.swipeout-actions-opened').hasClass('swipeout-actions-right') ? 'right' : 'left';\n    var swipeOutActions = el.find('.swipeout-actions-opened').removeClass('swipeout-actions-opened');\n    var noFold = swipeOutActions.hasClass('swipeout-actions-no-fold') || params.swipeoutActionsNoFold;\n    var buttons = swipeOutActions.children('a');\n    var swipeOutActionsWidth = swipeOutActions.outerWidth();\n    allowSwipeout = false;\n    el.trigger('close');\n    el.removeClass('swipeout-opened').addClass('transitioning');\n\n    var closeTO;\n    function onSwipeoutClose() {\n        allowSwipeout = true;\n        if (el.hasClass('swipeout-opened')) return;\n        el.removeClass('transitioning');\n        buttons.transform('');\n        el.trigger('closed');\n        if (callback) callback.call(el[0]);\n        if (closeTO) clearTimeout(closeTO);\n    }\n    el.find('.swipeout-content').transform('').transitionEnd(onSwipeoutClose);\n    closeTO = setTimeout(onSwipeoutClose, 500);\n    \n    for (var i = 0; i < buttons.length; i++) {\n        if (dir === 'right') {\n            $(buttons[i]).transform('translate3d(' + (-buttons[i].offsetLeft) + 'px,0,0)');\n        }\n        else {\n            $(buttons[i]).transform('translate3d(' + (swipeOutActionsWidth - buttons[i].offsetWidth - buttons[i].offsetLeft) + 'px,0,0)');\n        }\n        $(buttons[i]).css({left:0 + 'px'}).removeClass('swipeout-overswipe-active');\n    }\n    if (swipeoutOpenedEl && swipeoutOpenedEl[0] === el[0]) swipeoutOpenedEl = undefined;\n  };\n  $.swipeoutDelete = function (el, callback) {\n    el = $(el);\n    if (el.length === 0) return;\n    if (el.length > 1) el = $(el[0]);\n    swipeoutOpenedEl = undefined;\n    el.trigger('delete');\n    el.css({height: el.outerHeight() + 'px'});\n    var clientLeft = el[0].clientLeft;\n    el.css({height: 0 + 'px'}).addClass('deleting transitioning').transitionEnd(function () {\n        el.trigger('deleted');\n        if (callback) callback.call(el[0]);\n        if (el.parents('.virtual-list').length > 0) {\n            var virtualList = el.parents('.virtual-list')[0].f7VirtualList;\n            var virtualIndex = el[0].f7VirtualListIndex;\n            if (virtualList && typeof virtualIndex !== 'undefined') virtualList.deleteItem(virtualIndex);\n        }\n        else {\n            el.remove();\n        }\n    });\n    var translate = '-100%';\n    el.find('.swipeout-content').transform('translate3d(' + translate + ',0,0)');\n  };\n\n  $(function() {\n    $(document).on('click', '.swipeout-close, .swipeout-delete', function(e) {\n      var clicked = $(this);\n      var clickedData = clicked.dataset();\n      if (clicked.hasClass('swipeout-close')) {\n        $.swipeoutClose(clicked.parents('.swipeout-opened'));\n      }\n\n      // Swipeout Delete\n      if (clicked.hasClass('swipeout-delete')) {\n        if (clickedData.confirm) {\n          var text = clickedData.confirm;\n          var title = clickedData.confirmTitle;\n          if (title) {\n            $.confirm(text, title, function () {\n              $.swipeoutDelete(clicked.parents('.swipeout'));\n            }, function () {\n              if (clickedData.closeOnCancel) $.swipeoutClose(clicked.parents('.swipeout'));\n            });\n          }\n          else {\n            $.confirm(text, function () {\n              $.swipeoutDelete(clicked.parents('.swipeout'));\n            }, function () {\n              if (clickedData.closeOnCancel) $.swipeoutClose(clicked.parents('.swipeout'));\n            });\n          }\n        }\n        else {\n          $.swipeoutDelete(clicked.parents('.swipeout'));\n        }\n\n      }\n    });\n  });\n\n}($);\n"],"sourceRoot":"/source/"}